<?php
App::uses('AppController', 'Controller');
/**
 * Companies Controller
 *
 */
class CompaniesController extends AppController {
     public $helpers = array('Html', 'Form', 'Session');
    public $components = array('Session','Auth','Paginator');
//    var $components = array('Auth');
/**
 * Scaffold
 *
 * @var mixed
 */
	public $scaffold;
        function beforeFilter(){ 
            $this->Auth->userModel = 'User'; 
            $this->Auth->allow(array('index', 'view')); 
            $user = $this->Auth->user(); 
            $this->layout="admin";
        }   
           public function index() {
               $this->layout="admin";
               
        $this->set('companies', $this->Paginator->paginate());
    }

    public function view($id) {
        $this->layout="admin";
        if (!$id) {
            throw new NotFoundException(__('Invalid company'));
        }

        $company = $this->Company->find('first',array('conditons'=>array('Company.companyID=>$id')));
        if (!$company) {
            throw new NotFoundException(__('Invalid company'));
        }
        $this->set('company', $company);
    }

    public function add() {
        $this->layout="admin";
      if ($this->data) {
        $this->loadmodel('User');
        $user['User']['email']=$this->request->data['User']['email'];
        $user['User']['password']=Security::hash($this->request->data['User']['password'], 'sha1', true);
        $user['User']['role']='company';
         $this->User->save($user);
         $userid=$this->User->getLastInsertID();
         $companyData['Company']=$this->request->data['Company'];
         $companyData['Company']['user_id']=$userid;
                $this->Company->create();
            if ($this->Company->save($companyData)) {
                $this->Session->setFlash(__('Your company has been saved.'));
                return $this->redirect(array('action' => 'index'));
            }
            $this->Session->setFlash(__('Unable to add company.'));
        }
    }
    public function edit($id = null) {
        $this->layout="admin";
    if (!$id) {
        throw new NotFoundException(__('Invalid company'));
    }

    $company = $this->Company->find('first',array('conditons'=>array('Company.companyID'=>$id)));
    if (!$company) {
        throw new NotFoundException(__('Invalid company'));
    }

    if ($this->request->is(array('company', 'put'))) {
        $this->Company->id = $id;
        if ($this->Company->save($this->request->data)) {
            $this->Session->setFlash(__('Your company has been updated.'));
            return $this->redirect(array('action' => 'index'));
        }
        $this->Session->setFlash(__('Unable to update your company.'));
    }

    if (!$this->request->data) {
        $this->request->data = $company;
    }
}
public function delete($id) {
    if ($this->request->is('get')) {
        throw new MethodNotAllowedException();
    }

    if ($this->Company->delete($id)) {
        $this->Session->setFlash(
            __('The company with id: %s has been deleted.', h($id))
        );
        return $this->redirect(array('action' => 'index'));
    }
}
}
